/* Barebones Compass stylesheet
 *
 * This file is used to include all the other scss files
 *
 * One exception is base.scss, which itself contains other included files. This
 * is done so you can use the same base styles with different sets of included
 * files
 *
 * See individual included files for more info
 *
 * NOTE: This file is not meant to contain any rules directly
 */
/* Barebones Compass base styles
 *
 * This file provides base styles, mixins and variables, used throughout the
 * project
 *
 * See individual included files for more info
 *
 * NOTE: This file is not meant to contain any rules directly
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* Barebones fonts
 *
 * This file contains custom font imports and font stacks for different font
 * types
 */
/* Examples of font import statements
 *
 * Copy and paste outside of comment section
 *
 * Google Fonts single font face
 * @see http://www.google.com/fonts
 *
 *     @import url(http://fonts.googleapis.com/css?family=Roboto:400,700,400italic,700italic&subset=latin,cyrillic,cyrillic-ext);
 *
 * Google Fonts combination of font faces
 * @see http://www.google.com/fonts
 *
 *     @import url(http://fonts.googleapis.com/css?family=Roboto:400,700|PT+Serif:400,700&subset=latin,cyrillic,cyrillic-ext);
 *
 *
 *     // Example of mixin usage
 *	   @include font-face(YourAwesomeFont, '/fonts/your-awesome-font/your-awesome-font-regular');
 *     @include font-face(YourAwesomeFont, '/fonts/your-awesome-font/your-awesome-font-bold', bold);
 *     @include font-face(YourAwesomeFont, '/fonts/your-awesome-font/your-awesome-font-italic', normal, italic);
 */
/* Default font stacks
 */
@font-face {
  font-family: 'ProximaNova';
  src: url("../fonts/ProximaNova-Black.eot?#iefix") format("embedded-opentype"), url("../fonts/ProximaNova-Black.otf") format("opentype"), url("../fonts/ProximaNova-Black.woff") format("woff"), url("../fonts/ProximaNova-Black.ttf") format("truetype"), url("../fonts/ProximaNova-Black.svg#ProximaNova-Black") format("svg");
  font-weight: 800;
  font-style: normal; }

@font-face {
  font-family: 'ProximaNova';
  src: url("../fonts/ProximaNova-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/ProximaNova-Bold.otf") format("opentype"), url("../fonts/ProximaNova-Bold.woff") format("woff"), url("../fonts/ProximaNova-Bold.ttf") format("truetype"), url("../fonts/ProximaNova-Bold.svg#ProximaNova-Bold") format("svg");
  font-weight: 700;
  font-style: normal; }

@font-face {
  font-family: 'ProximaNova';
  src: url("../fonts/ProximaNova-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/ProximaNova-Regular.otf") format("opentype"), url("../fonts/ProximaNova-Regular.woff") format("woff"), url("../fonts/ProximaNova-Regular.ttf") format("truetype"), url("../fonts/ProximaNova-Regular.svg#ProximaNova-Regular") format("svg");
  font-weight: 400;
  font-style: normal; }

@font-face {
  font-family: 'ProximaNova';
  src: url("../fonts/ProximaNova-Light.eot?#iefix") format("embedded-opentype"), url("../fonts/ProximaNova-Light.otf") format("opentype"), url("../fonts/ProximaNova-Light.woff") format("woff"), url("../fonts/ProximaNova-Light.ttf") format("truetype"), url("../fonts/ProximaNova-Light.svg#ProximaNova-Light") format("svg");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: "fruit";
  src: url("../fonts/fruit.eot");
  src: url("../fonts/fruit.eot?#iefix") format("embedded-opentype"), url("../fonts/fruit.woff") format("woff"), url("../fonts/fruit.ttf") format("truetype"), url("../fonts/fruit.svg#fruit") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "fruit";
  src: url("fonts/fruit.eot");
  src: url("fonts/fruit.eot?#iefix") format("embedded-opentype"), url("fonts/fruit.woff") format("woff"), url("fonts/fruit.ttf") format("truetype"), url("fonts/fruit.svg#fruit") format("svg");
  font-weight: normal;
  font-style: normal; }

[data-icon]:before {
  font-family: "fruit" !important;
  content: attr(data-icon);
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

[class^="fr-"]:before,
[class*=" fr-"]:before {
  font-family: "fruit" !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.fr-arrow:before {
  content: "\61"; }

.fr-fb:before {
  content: "\63"; }

.fr-vk:before {
  content: "\64"; }

.fr-map:before {
  content: "\65"; }

.fr-mail:before {
  content: "\66"; }

.fr-phone:before {
  content: "\62"; }

/* Barebones Compass variables
 *
 * This file should be used to redefine values used by other files. Most basic
 * style tweaks can be done from this file
 *
 * Font stacks are defined within base/_font.scss
 */
/* Base typography settings
 */
/* Base visual settings
 */
/* Base layout settings
 */
/* Sprite settings
 */
/* Link settings
 */
/* Button settings
 */
/* Layout settings
 */
/* Layout grid settings
 *
 * NOTE: grid container is usually placed inside .layout-container element. This
 * means the grid is limited by $layout-container-width. That is why the following
 * condition should be met:
 *
 *     $width:   $layout-grid-column-width;
 *     $columns: $layout-grid-columns;
 *     $spacing: $layout-grid-column-spacing;
 *
 *     $layout-container-width == ($width * $columns) + ($spacing * ($columns - 1))
 */
/* Sticky footer settings
 *
 * To use sticky footer, set the following value to true. Layout footer height
 * setting is required for the sticky footer to work
 *
 * Your layout markup should only have two elements within the body:
 * .layout-content and .layout-footer. All other elements should be within
 * .layout-content
 */
/* Barebones Compass functions
 *
 * Contains custom functions in use within the project
 *
 * See individual functions for more info
 */
/* PX to REM function
 *
 * This function is used to calculate rem value based on base font size value:
 *
 *     .my-class {
 *         font-size: rem(24px);
 *     }
 *
 * @uses $base-font-size as the default $base value
 */
/* Barebones Compass mixins
 *
 * Contains custom mixins in use within the project
 *
 * See individual mixins for more info
 */
/* Base diff mixin
 *
 * Redefines basic typography settings and background, but only if they differ
 * from base values:
 *
 *     .my-class {
 *         base-diff(#000, $font-sans-serif, 32px);
 *     }
 *
 * Base values are defined in base/_variable.scss
 *
 * @uses $base-color
 * @uses $base-font-family
 * @uses $base-font-size
 * @uses $base-font-style
 * @uses $base-font-weight
 * @uses $base-line-height
 * @uses $base-background-color
 */
/* Vertical centering mixin
 *
 * This mixin allows content to be centered within a container element:
 *
 *     .my-container-class {
 *         @include vertical-center ('.my-child-element');
 *     }
 *
 * NOTE: depending on font-size and font-family, you might need to adjust
 * the pseudo-element's left margin:
 *
 *     .my-container-class {
 *         @include vertical-center ('.my-child-element', -0.3em);
 *     }
 */
/* Text inputs mixin
 *
 * This mixin allows to style all textual inputs with a simple selector:
 *
 *     @include text-input {
 *         color: #ccc;
 *     }
 *
 * Currently includes text, password, email, number, search, tel and url input
 * types
 */
/* Clearfix mixin
 *
 * Extend this to get a clearfix after element:
 *
 *     .my-element {
 *         @extend %clearfix;
 *     }
 */
.main-tabs:after, .programs .card-itself .card-buttons .button-cont:after, .margin-row:after, .details-modal .header-modal:after, .details-modal .menu-row:after, .blog-post .blog-header:after, .layout-container:after, .layout-container-fluid:after {
  content: "";
  display: table;
  clear: both; }

/* List-reset mixin
 *
 * Extend this to reset a list element (ul, ol etc):
 *
 *     ul.my-list {
 *         @extend list-reset;
 *     }
 */
/* Responsive styles mixin
 *
 * This mixin allows to style the element for certain devices. Developers are
 * meant to edit available devices (their names and media queries) within the
 * mixin before using it in their styles:
 *
 *     .my-element {
 *         width: 940px;
 *         margin: 0 auto;
 *
 *         @include respond(tablet) {
 *             // Stretch to full width on tablets
 *             width: auto;
 *             margin: 0 10px;
 *         }
 *     }
 */
/* Font-face mixin
 *
 * Taken from: https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/css3/_font-face.scss
 * Order of the includes matters, and it is: normal, bold, italic, bold+italic.
 *
 */
/* Barebones Compass link mixins
 *
 * Contains custom link mixins in use within the project
 *
 * See individual mixins for more info
 */
/* Link transitions
 *
 * Set to false to disable link transitions
 */
/* Link transition duration
 *
 * Defines link transition duration
 */
/* Link transition function
 *
 * Defines link transition function
 */
/* Basic link mixin
 *
 * Defines font colors for basic link states: visited, hover and active. By
 * default, focus state is the same as hover state, but you can set a different
 * color for focus state
 *
 * @uses $link-transitions
 * @uses $link-transition-duration
 * @uses $link-transition-function
 */
/* Bordered link mixin
 *
 * Defines font and bottom border colors for basic link states: visited, hover
 * and active. By default, focus state is the same as hover state, but you can
 * set a different color for focus state
 *
 * @uses $link-transitions
 * @uses $link-transition-duration
 * @uses $link-transition-function
 */
/* Barebones Compass triangle mixin
 *
 * Contains custom triangle mixin in use within the project
 */
/* Triangle mixin
 *
 * This mixin helps drawing triangles with borders.
 *
 *     .my-class {
 *         triangle(15px, #ccc, bottom);
 *     }
 *
 * TODO: write docs
 */
/* Barebones Compass button mixins
 *
 * Contains custom button mixins in use within the project
 *
 * See individual mixins for more info
 */
/* Button transitions
  *
  * Set to false to disable button transitions
  */
/* Button transition duration
 *
 * Defines button transition duration
 */
/* Button transition function
 *
 * Defines button transition function
 */
/* Basic button mixin
 *
 * Defines font and background colors for basic color states: hover, active and
 * disabled. By default, focus state is the same as hover state, but you can set
 * different colors for focus state. By default, disabled state is inactive
 *
 * @uses $button-transitions
 * @uses $button-transition-duration
 * @uses $button-transition-function
 */
.svg-icon-animated:before {
  content: '';
  position: absolute;
  width: 20px;
  height: 20px;
  left: 0;
  top: 0;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  transition: opacity 0.15s linear; }

.svg-icon-animated:after {
  content: '';
  position: absolute;
  width: 20px;
  height: 20px;
  left: 0;
  top: 0;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  transition: opacity 0.15s linear;
  opacity: 0; }

.svg-icon-animated:hover:before {
  opacity: 0; }

.svg-icon-animated:hover:after {
  opacity: 1; }

*:hover > .svg-icon-animated:before {
  opacity: 0; }

*:hover > .svg-icon-animated:after {
  opacity: 1; }

.icon {
  display: inline-block;
  background-repeat: no-repeat; }

/**
 * selectize.scss (v0.8.7)
 * Copyright (c) 2014 Emanuel Kluge
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at:
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
 * ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 *
 * @author Emanuel Kluge <mail@emanuel-kluge.de>
 */
.selectize-control {
  position: relative; }

.selectize-dropdown,
.selectize-input,
.selectize-input input {
  color: #303030;
  font-family: inherit;
  font-size: 13px;
  line-height: 18px;
  -webkit-font-smoothing: inherit; }

.selectize-input,
.selectize-control.single .selectize-input.input-active {
  background: #fff;
  cursor: text;
  display: inline-block; }

.selectize-input {
  border: 1px solid #d0d0d0;
  padding: 8px 8px;
  display: inline-block;
  width: 100%;
  overflow: hidden;
  position: relative;
  z-index: 1;
  box-sizing: border-box;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.1);
  border-radius: 3px; }
  .selectize-control.multi .selectize-input.has-items {
    padding: 6px 8px 3px; }
  .selectize-input.full {
    background-color: #fff; }
  .selectize-input.disabled, .selectize-input.disabled * {
    cursor: default !important; }
  .selectize-input.focus {
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15); }
  .selectize-input.dropdown-active {
    border-radius: 3px 3px 0 0; }
  .selectize-input > * {
    vertical-align: baseline;
    display: -moz-inline-stack;
    display: inline-block;
    zoom: 1;
    *display: inline; }
  .selectize-control.multi .selectize-input > div {
    cursor: pointer;
    margin: 0 3px 3px 0;
    padding: 2px 6px;
    background: #f2f2f2;
    color: #303030;
    border: 0 solid #d0d0d0; }
    .selectize-control.multi .selectize-input > div.active {
      background: #e8e8e8;
      color: #303030;
      border: 0 solid #cacaca; }
  .selectize-control.multi .selectize-input.disabled > div, .selectize-control.multi .selectize-input.disabled > div.active {
    color: #7d7d7d;
    background: white;
    border: 0 solid white; }
  .selectize-input > input {
    display: inline-block !important;
    padding: 0 !important;
    min-height: 0 !important;
    max-height: none !important;
    max-width: 100% !important;
    margin: 0 2px 0 0 !important;
    text-indent: 0 !important;
    border: 0 none !important;
    background: none !important;
    line-height: inherit !important;
    -webkit-user-select: auto !important;
    -moz-user-select: auto !important;
    -ms-user-select: auto !important;
    user-select: auto !important;
    box-shadow: none !important; }
    .selectize-input > input::-ms-clear {
      display: none; }
    .selectize-input > input:focus {
      outline: none !important; }

.selectize-input:after {
  content: ' ';
  display: block;
  clear: left; }

.selectize-input.dropdown-active:before {
  content: ' ';
  display: block;
  position: absolute;
  background: #f0f0f0;
  height: 1px;
  bottom: 0;
  left: 0;
  right: 0; }

.selectize-dropdown {
  position: absolute;
  z-index: 10;
  border: 1px solid #d0d0d0;
  background: #fff;
  margin: -1px 0 0 0;
  border-top: 0 none;
  box-sizing: border-box;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  border-radius: 0 0 3px 3px; }
  .selectize-dropdown [data-selectable] {
    cursor: pointer;
    overflow: hidden; }
    .selectize-dropdown [data-selectable] .highlight {
      background: rgba(125, 168, 208, 0.2);
      border-radius: 1px; }
  .selectize-dropdown [data-selectable], .selectize-dropdown .optgroup-header {
    padding: 5px 8px; }
  .selectize-dropdown .optgroup:first-child .optgroup-header {
    border-top: 0 none; }
  .selectize-dropdown .optgroup-header {
    color: #303030;
    background: #fff;
    cursor: default; }
  .selectize-dropdown .active {
    background-color: #f5fafd;
    color: #495c68; }
    .selectize-dropdown .active.create {
      color: #495c68; }
  .selectize-dropdown .create {
    color: rgba(48, 48, 48, 0.5); }

.selectize-dropdown-content {
  overflow-y: auto;
  overflow-x: hidden;
  max-height: 200px; }

.selectize-control.single .selectize-input, .selectize-control.single .selectize-input input {
  cursor: pointer; }

.selectize-control.single .selectize-input.input-active, .selectize-control.single .selectize-input.input-active input {
  cursor: text; }

.selectize-control.single .selectize-input:after {
  content: ' ';
  display: block;
  position: absolute;
  top: 50%;
  right: 15px;
  margin-top: -3px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 5px 5px 0 5px;
  border-color: #808080 transparent transparent transparent; }

.selectize-control.single .selectize-input.dropdown-active:after {
  margin-top: -4px;
  border-width: 0 5px 5px 5px;
  border-color: transparent transparent #808080 transparent; }

.selectize-control.rtl.single .selectize-input:after {
  left: 15px;
  right: auto; }

.selectize-control.rtl .selectize-input > input {
  margin: 0 4px 0 -2px !important; }

.selectize-control .selectize-input.disabled {
  opacity: 0.5;
  background-color: #fafafa; }

/**
 * selectize.scss (v0.8.7)
 * Copyright (c) 2014 Emanuel Kluge
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at:
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
 * ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 *
 * @author Emanuel Kluge <mail@emanuel-kluge.de>
 */
.selectize-control {
  position: relative; }

.selectize-dropdown,
.selectize-input,
.selectize-input input {
  color: #303030;
  font-family: inherit;
  font-size: 13px;
  line-height: 18px;
  -webkit-font-smoothing: inherit; }

.selectize-input,
.selectize-control.single .selectize-input.input-active {
  background: #fff;
  cursor: text;
  display: inline-block; }

.selectize-input {
  border: 1px solid #d0d0d0;
  padding: 8px 8px;
  display: inline-block;
  width: 100%;
  overflow: hidden;
  position: relative;
  z-index: 1;
  box-sizing: border-box;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.1);
  border-radius: 3px; }
  .selectize-control.multi .selectize-input.has-items {
    padding: 6px 8px 3px; }
  .selectize-input.full {
    background-color: #fff; }
  .selectize-input.disabled, .selectize-input.disabled * {
    cursor: default !important; }
  .selectize-input.focus {
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15); }
  .selectize-input.dropdown-active {
    border-radius: 3px 3px 0 0; }
  .selectize-input > * {
    vertical-align: baseline;
    display: -moz-inline-stack;
    display: inline-block;
    zoom: 1;
    *display: inline; }
  .selectize-control.multi .selectize-input > div {
    cursor: pointer;
    margin: 0 3px 3px 0;
    padding: 2px 6px;
    background: #f2f2f2;
    color: #303030;
    border: 0 solid #d0d0d0; }
    .selectize-control.multi .selectize-input > div.active {
      background: #e8e8e8;
      color: #303030;
      border: 0 solid #cacaca; }
  .selectize-control.multi .selectize-input.disabled > div, .selectize-control.multi .selectize-input.disabled > div.active {
    color: #7d7d7d;
    background: white;
    border: 0 solid white; }
  .selectize-input > input {
    display: inline-block !important;
    padding: 0 !important;
    min-height: 0 !important;
    max-height: none !important;
    max-width: 100% !important;
    margin: 0 2px 0 0 !important;
    text-indent: 0 !important;
    border: 0 none !important;
    background: none !important;
    line-height: inherit !important;
    -webkit-user-select: auto !important;
    -moz-user-select: auto !important;
    -ms-user-select: auto !important;
    user-select: auto !important;
    box-shadow: none !important; }
    .selectize-input > input::-ms-clear {
      display: none; }
    .selectize-input > input:focus {
      outline: none !important; }

.selectize-input:after {
  content: ' ';
  display: block;
  clear: left; }

.selectize-input.dropdown-active:before {
  content: ' ';
  display: block;
  position: absolute;
  background: #f0f0f0;
  height: 1px;
  bottom: 0;
  left: 0;
  right: 0; }

.selectize-dropdown {
  position: absolute;
  z-index: 10;
  border: 1px solid #d0d0d0;
  background: #fff;
  margin: -1px 0 0 0;
  border-top: 0 none;
  box-sizing: border-box;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  border-radius: 0 0 3px 3px; }
  .selectize-dropdown [data-selectable] {
    cursor: pointer;
    overflow: hidden; }
    .selectize-dropdown [data-selectable] .highlight {
      background: rgba(125, 168, 208, 0.2);
      border-radius: 1px; }
  .selectize-dropdown [data-selectable], .selectize-dropdown .optgroup-header {
    padding: 5px 8px; }
  .selectize-dropdown .optgroup:first-child .optgroup-header {
    border-top: 0 none; }
  .selectize-dropdown .optgroup-header {
    color: #303030;
    background: #fff;
    cursor: default; }
  .selectize-dropdown .active {
    background-color: #f5fafd;
    color: #495c68; }
    .selectize-dropdown .active.create {
      color: #495c68; }
  .selectize-dropdown .create {
    color: rgba(48, 48, 48, 0.5); }

.selectize-dropdown-content {
  overflow-y: auto;
  overflow-x: hidden;
  max-height: 200px; }

.selectize-control.single .selectize-input, .selectize-control.single .selectize-input input {
  cursor: pointer; }

.selectize-control.single .selectize-input.input-active, .selectize-control.single .selectize-input.input-active input {
  cursor: text; }

.selectize-control.single .selectize-input:after {
  content: ' ';
  display: block;
  position: absolute;
  top: 50%;
  right: 15px;
  margin-top: -3px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 5px 5px 0 5px;
  border-color: #808080 transparent transparent transparent; }

.selectize-control.single .selectize-input.dropdown-active:after {
  margin-top: -4px;
  border-width: 0 5px 5px 5px;
  border-color: transparent transparent #808080 transparent; }

.selectize-control.rtl.single .selectize-input:after {
  left: 15px;
  right: auto; }

.selectize-control.rtl .selectize-input > input {
  margin: 0 4px 0 -2px !important; }

.selectize-control .selectize-input.disabled {
  opacity: 0.5;
  background-color: #fafafa; }

.selectize-control.multi .selectize-input.has-items {
  padding-left: 5px;
  padding-right: 5px; }

.selectize-control.multi .selectize-input.disabled [data-value] {
  color: #999;
  text-shadow: none;
  background: none;
  box-shadow: none; }
  .selectize-control.multi .selectize-input.disabled [data-value],
  .selectize-control.multi .selectize-input.disabled [data-value] .remove {
    border-color: #e6e6e6; }
  .selectize-control.multi .selectize-input.disabled [data-value] .remove {
    background: none; }

.selectize-control.multi .selectize-input [data-value] {
  text-shadow: 0 1px 0 rgba(0, 51, 83, 0.3);
  border-radius: 3px;
  background-color: #1b9dec;
  background-image: linear-gradient(to bottom, #1da7ee, #178ee9);
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#1da7ee', endColorstr='#178ee9', GradientType=0);
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), inset 0 1px rgba(255, 255, 255, 0.03); }
  .selectize-control.multi .selectize-input [data-value].active {
    background-color: #0085d4;
    background-image: linear-gradient(to bottom, #008fd8, #0075cf);
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#008fd8', endColorstr='#0075cf', GradientType=0); }

.selectize-control.single .selectize-input {
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.05), inset 0 1px 0 rgba(255, 255, 255, 0.8);
  background-color: #f9f9f9;
  background-image: linear-gradient(to bottom, #fefefe, #f2f2f2);
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fefefe', endColorstr='#f2f2f2', GradientType=0); }

.selectize-control.single .selectize-input,
.selectize-dropdown.single {
  border-color: #b8b8b8; }

.selectize-dropdown .optgroup-header {
  padding-top: 7px;
  font-weight: bold;
  font-size: .85em; }

.selectize-dropdown .optgroup {
  border-top: 1px solid #f0f0f0; }
  .selectize-dropdown .optgroup:first-child {
    border-top: 0 none; }

.carousel {
  position: relative; }

.carousel-inner {
  position: relative;
  overflow: hidden;
  width: 100%; }
  .carousel-inner > .item {
    display: none;
    position: relative;
    transition: 0.6s ease-in-out left; }
    .carousel-inner > .item > img,
    .carousel-inner > .item > a > img {
      display: block;
      max-width: 100%;
      height: auto;
      line-height: 1; }
    @media all and (transform-3d), (-webkit-transform-3d) {
      .carousel-inner > .item {
        transition: -webkit-transform 0.6s ease-in-out;
        transition: transform 0.6s ease-in-out;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        -webkit-perspective: 1000px;
        perspective: 1000px; }
        .carousel-inner > .item.next, .carousel-inner > .item.active.right {
          -webkit-transform: translate3d(100%, 0, 0);
          transform: translate3d(100%, 0, 0);
          left: 0; }
        .carousel-inner > .item.prev, .carousel-inner > .item.active.left {
          -webkit-transform: translate3d(-100%, 0, 0);
          transform: translate3d(-100%, 0, 0);
          left: 0; }
        .carousel-inner > .item.next.left, .carousel-inner > .item.prev.right, .carousel-inner > .item.active {
          -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
          left: 0; } }
  .carousel-inner > .active,
  .carousel-inner > .next,
  .carousel-inner > .prev {
    display: block; }
  .carousel-inner > .active {
    left: 0; }
  .carousel-inner > .next,
  .carousel-inner > .prev {
    position: absolute;
    top: 0;
    width: 100%; }
  .carousel-inner > .next {
    left: 100%; }
  .carousel-inner > .prev {
    left: -100%; }
  .carousel-inner > .next.left,
  .carousel-inner > .prev.right {
    left: 0; }
  .carousel-inner > .active.left {
    left: -100%; }
  .carousel-inner > .active.right {
    left: 100%; }

.carousel-control {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 15%;
  opacity: 0.5;
  filter: alpha(opacity=50);
  font-size: 20px;
  color: #fff;
  text-align: center;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);
  background-color: transparent; }
  .carousel-control.left {
    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000', endColorstr='#00000000', GradientType=1); }
  .carousel-control.right {
    left: auto;
    right: 0;
    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#80000000', GradientType=1); }
  .carousel-control:hover, .carousel-control:focus {
    outline: 0;
    color: #fff;
    text-decoration: none;
    opacity: 0.9;
    filter: alpha(opacity=90); }
  .carousel-control .icon-prev,
  .carousel-control .icon-next,
  .carousel-control .glyphicon-chevron-left,
  .carousel-control .glyphicon-chevron-right {
    position: absolute;
    top: 50%;
    margin-top: -10px;
    z-index: 5;
    display: inline-block; }
  .carousel-control .icon-prev,
  .carousel-control .glyphicon-chevron-left {
    left: 50%;
    margin-left: -10px; }
  .carousel-control .icon-next,
  .carousel-control .glyphicon-chevron-right {
    right: 50%;
    margin-right: -10px; }
  .carousel-control .icon-prev,
  .carousel-control .icon-next {
    width: 20px;
    height: 20px;
    line-height: 1;
    font-family: serif; }
  .carousel-control .icon-prev:before {
    content: '\2039'; }
  .carousel-control .icon-next:before {
    content: '\203a'; }

.carousel-indicators {
  position: absolute;
  bottom: 10px;
  left: 50%;
  z-index: 15;
  width: 60%;
  margin-left: -30%;
  padding-left: 0;
  list-style: none;
  text-align: center; }
  .carousel-indicators li {
    display: inline-block;
    width: 10px;
    height: 10px;
    margin: 1px;
    text-indent: -999px;
    border: 1px solid #fff;
    border-radius: 10px;
    cursor: pointer;
    background-color: #000 \9;
    background-color: transparent; }
  .carousel-indicators .active {
    margin: 0;
    width: 12px;
    height: 12px;
    background-color: #fff; }

.carousel-caption {
  position: absolute;
  left: 15%;
  right: 15%;
  bottom: 20px;
  z-index: 10;
  padding-top: 20px;
  padding-bottom: 20px;
  color: #fff;
  text-align: center;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6); }
  .carousel-caption .btn {
    text-shadow: none; }

@media screen and (min-width: 768px) {
  .carousel-control .glyphicon-chevron-left,
  .carousel-control .glyphicon-chevron-right,
  .carousel-control .icon-prev,
  .carousel-control .icon-next {
    width: 30px;
    height: 30px;
    margin-top: -10px;
    font-size: 30px; }
  .carousel-control .glyphicon-chevron-left,
  .carousel-control .icon-prev {
    margin-left: -10px; }
  .carousel-control .glyphicon-chevron-right,
  .carousel-control .icon-next {
    margin-right: -10px; }
  .carousel-caption {
    left: 20%;
    right: 20%;
    padding-bottom: 30px; }
  .carousel-indicators {
    bottom: 20px; } }

.caret {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 2px;
  vertical-align: middle;
  border-top: 4px dashed;
  border-top: 4px solid \9;
  border-right: 4px solid transparent;
  border-left: 4px solid transparent; }

.dropup,
.dropdown {
  position: relative; }

.dropdown-toggle:focus {
  outline: 0; }

.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  display: none;
  float: left;
  min-width: 160px;
  padding: 5px 0;
  margin: 2px 0 0;
  list-style: none;
  font-size: 14px;
  text-align: left;
  background-color: #fff;
  border: 1px solid #ccc;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 4px;
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
  background-clip: padding-box; }
  .dropdown-menu.pull-right {
    right: 0;
    left: auto; }
  .dropdown-menu .divider {
    height: 1px;
    margin: 9px 0;
    overflow: hidden;
    background-color: #e5e5e5; }
  .dropdown-menu > li > a {
    display: block;
    padding: 3px 20px;
    clear: both;
    font-weight: normal;
    line-height: 1.42857;
    color: #333333;
    white-space: nowrap; }

.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus {
  text-decoration: none;
  color: #262626;
  background-color: #f5f5f5; }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:hover, .dropdown-menu > .active > a:focus {
  color: #fff;
  text-decoration: none;
  outline: 0;
  background-color: #337ab7; }

.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus {
  color: #777777; }

.dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus {
  text-decoration: none;
  background-color: transparent;
  background-image: none;
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  cursor: not-allowed; }

.open > .dropdown-menu {
  display: block; }

.open > a {
  outline: 0; }

.dropdown-menu-right {
  left: auto;
  right: 0; }

.dropdown-menu-left {
  left: 0;
  right: auto; }

.dropdown-header {
  display: block;
  padding: 3px 20px;
  font-size: 12px;
  line-height: 1.42857;
  color: #777777;
  white-space: nowrap; }

.dropdown-backdrop {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  z-index: 990; }

.pull-right > .dropdown-menu {
  right: 0;
  left: auto; }

.dropup .caret,
.navbar-fixed-bottom .dropdown .caret {
  border-top: 0;
  border-bottom: 4px dashed;
  border-bottom: 4px solid \9;
  content: ""; }

.dropup .dropdown-menu,
.navbar-fixed-bottom .dropdown .dropdown-menu {
  top: auto;
  bottom: 100%;
  margin-bottom: 2px; }

@media (min-width: 768px) {
  .navbar-right .dropdown-menu {
    right: 0;
    left: auto; }
  .navbar-right .dropdown-menu-left {
    left: 0;
    right: auto; } }

.container {
  margin-right: auto;
  margin-left: auto;
  padding-left: 15px;
  padding-right: 15px; }
  .container:before, .container:after {
    content: " ";
    display: table; }
  .container:after {
    clear: both; }
  @media (min-width: 768px) {
    .container {
      width: 750px; } }
  @media (min-width: 992px) {
    .container {
      width: 970px; } }
  @media (min-width: 1200px) {
    .container {
      width: 1170px; } }

.container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-left: 15px;
  padding-right: 15px; }
  .container-fluid:before, .container-fluid:after {
    content: " ";
    display: table; }
  .container-fluid:after {
    clear: both; }

.row {
  margin-left: -15px;
  margin-right: -15px; }
  .row:before, .row:after {
    content: " ";
    display: table; }
  .row:after {
    clear: both; }

.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {
  position: relative;
  min-height: 1px;
  padding-left: 15px;
  padding-right: 15px; }

.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12 {
  float: left; }

.col-xs-1 {
  width: 8.33333%; }

.col-xs-2 {
  width: 16.66667%; }

.col-xs-3 {
  width: 25%; }

.col-xs-4 {
  width: 33.33333%; }

.col-xs-5 {
  width: 41.66667%; }

.col-xs-6 {
  width: 50%; }

.col-xs-7 {
  width: 58.33333%; }

.col-xs-8 {
  width: 66.66667%; }

.col-xs-9 {
  width: 75%; }

.col-xs-10 {
  width: 83.33333%; }

.col-xs-11 {
  width: 91.66667%; }

.col-xs-12 {
  width: 100%; }

.col-xs-pull-0 {
  right: auto; }

.col-xs-pull-1 {
  right: 8.33333%; }

.col-xs-pull-2 {
  right: 16.66667%; }

.col-xs-pull-3 {
  right: 25%; }

.col-xs-pull-4 {
  right: 33.33333%; }

.col-xs-pull-5 {
  right: 41.66667%; }

.col-xs-pull-6 {
  right: 50%; }

.col-xs-pull-7 {
  right: 58.33333%; }

.col-xs-pull-8 {
  right: 66.66667%; }

.col-xs-pull-9 {
  right: 75%; }

.col-xs-pull-10 {
  right: 83.33333%; }

.col-xs-pull-11 {
  right: 91.66667%; }

.col-xs-pull-12 {
  right: 100%; }

.col-xs-push-0 {
  left: auto; }

.col-xs-push-1 {
  left: 8.33333%; }

.col-xs-push-2 {
  left: 16.66667%; }

.col-xs-push-3 {
  left: 25%; }

.col-xs-push-4 {
  left: 33.33333%; }

.col-xs-push-5 {
  left: 41.66667%; }

.col-xs-push-6 {
  left: 50%; }

.col-xs-push-7 {
  left: 58.33333%; }

.col-xs-push-8 {
  left: 66.66667%; }

.col-xs-push-9 {
  left: 75%; }

.col-xs-push-10 {
  left: 83.33333%; }

.col-xs-push-11 {
  left: 91.66667%; }

.col-xs-push-12 {
  left: 100%; }

.col-xs-offset-0 {
  margin-left: 0%; }

.col-xs-offset-1 {
  margin-left: 8.33333%; }

.col-xs-offset-2 {
  margin-left: 16.66667%; }

.col-xs-offset-3 {
  margin-left: 25%; }

.col-xs-offset-4 {
  margin-left: 33.33333%; }

.col-xs-offset-5 {
  margin-left: 41.66667%; }

.col-xs-offset-6 {
  margin-left: 50%; }

.col-xs-offset-7 {
  margin-left: 58.33333%; }

.col-xs-offset-8 {
  margin-left: 66.66667%; }

.col-xs-offset-9 {
  margin-left: 75%; }

.col-xs-offset-10 {
  margin-left: 83.33333%; }

.col-xs-offset-11 {
  margin-left: 91.66667%; }

.col-xs-offset-12 {
  margin-left: 100%; }

@media (min-width: 768px) {
  .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12 {
    float: left; }
  .col-sm-1 {
    width: 8.33333%; }
  .col-sm-2 {
    width: 16.66667%; }
  .col-sm-3 {
    width: 25%; }
  .col-sm-4 {
    width: 33.33333%; }
  .col-sm-5 {
    width: 41.66667%; }
  .col-sm-6 {
    width: 50%; }
  .col-sm-7 {
    width: 58.33333%; }
  .col-sm-8 {
    width: 66.66667%; }
  .col-sm-9 {
    width: 75%; }
  .col-sm-10 {
    width: 83.33333%; }
  .col-sm-11 {
    width: 91.66667%; }
  .col-sm-12 {
    width: 100%; }
  .col-sm-pull-0 {
    right: auto; }
  .col-sm-pull-1 {
    right: 8.33333%; }
  .col-sm-pull-2 {
    right: 16.66667%; }
  .col-sm-pull-3 {
    right: 25%; }
  .col-sm-pull-4 {
    right: 33.33333%; }
  .col-sm-pull-5 {
    right: 41.66667%; }
  .col-sm-pull-6 {
    right: 50%; }
  .col-sm-pull-7 {
    right: 58.33333%; }
  .col-sm-pull-8 {
    right: 66.66667%; }
  .col-sm-pull-9 {
    right: 75%; }
  .col-sm-pull-10 {
    right: 83.33333%; }
  .col-sm-pull-11 {
    right: 91.66667%; }
  .col-sm-pull-12 {
    right: 100%; }
  .col-sm-push-0 {
    left: auto; }
  .col-sm-push-1 {
    left: 8.33333%; }
  .col-sm-push-2 {
    left: 16.66667%; }
  .col-sm-push-3 {
    left: 25%; }
  .col-sm-push-4 {
    left: 33.33333%; }
  .col-sm-push-5 {
    left: 41.66667%; }
  .col-sm-push-6 {
    left: 50%; }
  .col-sm-push-7 {
    left: 58.33333%; }
  .col-sm-push-8 {
    left: 66.66667%; }
  .col-sm-push-9 {
    left: 75%; }
  .col-sm-push-10 {
    left: 83.33333%; }
  .col-sm-push-11 {
    left: 91.66667%; }
  .col-sm-push-12 {
    left: 100%; }
  .col-sm-offset-0 {
    margin-left: 0%; }
  .col-sm-offset-1 {
    margin-left: 8.33333%; }
  .col-sm-offset-2 {
    margin-left: 16.66667%; }
  .col-sm-offset-3 {
    margin-left: 25%; }
  .col-sm-offset-4 {
    margin-left: 33.33333%; }
  .col-sm-offset-5 {
    margin-left: 41.66667%; }
  .col-sm-offset-6 {
    margin-left: 50%; }
  .col-sm-offset-7 {
    margin-left: 58.33333%; }
  .col-sm-offset-8 {
    margin-left: 66.66667%; }
  .col-sm-offset-9 {
    margin-left: 75%; }
  .col-sm-offset-10 {
    margin-left: 83.33333%; }
  .col-sm-offset-11 {
    margin-left: 91.66667%; }
  .col-sm-offset-12 {
    margin-left: 100%; } }

@media (min-width: 992px) {
  .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
    float: left; }
  .col-md-1 {
    width: 8.33333%; }
  .col-md-2 {
    width: 16.66667%; }
  .col-md-3 {
    width: 25%; }
  .col-md-4 {
    width: 33.33333%; }
  .col-md-5 {
    width: 41.66667%; }
  .col-md-6 {
    width: 50%; }
  .col-md-7 {
    width: 58.33333%; }
  .col-md-8 {
    width: 66.66667%; }
  .col-md-9 {
    width: 75%; }
  .col-md-10 {
    width: 83.33333%; }
  .col-md-11 {
    width: 91.66667%; }
  .col-md-12 {
    width: 100%; }
  .col-md-pull-0 {
    right: auto; }
  .col-md-pull-1 {
    right: 8.33333%; }
  .col-md-pull-2 {
    right: 16.66667%; }
  .col-md-pull-3 {
    right: 25%; }
  .col-md-pull-4 {
    right: 33.33333%; }
  .col-md-pull-5 {
    right: 41.66667%; }
  .col-md-pull-6 {
    right: 50%; }
  .col-md-pull-7 {
    right: 58.33333%; }
  .col-md-pull-8 {
    right: 66.66667%; }
  .col-md-pull-9 {
    right: 75%; }
  .col-md-pull-10 {
    right: 83.33333%; }
  .col-md-pull-11 {
    right: 91.66667%; }
  .col-md-pull-12 {
    right: 100%; }
  .col-md-push-0 {
    left: auto; }
  .col-md-push-1 {
    left: 8.33333%; }
  .col-md-push-2 {
    left: 16.66667%; }
  .col-md-push-3 {
    left: 25%; }
  .col-md-push-4 {
    left: 33.33333%; }
  .col-md-push-5 {
    left: 41.66667%; }
  .col-md-push-6 {
    left: 50%; }
  .col-md-push-7 {
    left: 58.33333%; }
  .col-md-push-8 {
    left: 66.66667%; }
  .col-md-push-9 {
    left: 75%; }
  .col-md-push-10 {
    left: 83.33333%; }
  .col-md-push-11 {
    left: 91.66667%; }
  .col-md-push-12 {
    left: 100%; }
  .col-md-offset-0 {
    margin-left: 0%; }
  .col-md-offset-1 {
    margin-left: 8.33333%; }
  .col-md-offset-2 {
    margin-left: 16.66667%; }
  .col-md-offset-3 {
    margin-left: 25%; }
  .col-md-offset-4 {
    margin-left: 33.33333%; }
  .col-md-offset-5 {
    margin-left: 41.66667%; }
  .col-md-offset-6 {
    margin-left: 50%; }
  .col-md-offset-7 {
    margin-left: 58.33333%; }
  .col-md-offset-8 {
    margin-left: 66.66667%; }
  .col-md-offset-9 {
    margin-left: 75%; }
  .col-md-offset-10 {
    margin-left: 83.33333%; }
  .col-md-offset-11 {
    margin-left: 91.66667%; }
  .col-md-offset-12 {
    margin-left: 100%; } }

@media (min-width: 1200px) {
  .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12 {
    float: left; }
  .col-lg-1 {
    width: 8.33333%; }
  .col-lg-2 {
    width: 16.66667%; }
  .col-lg-3 {
    width: 25%; }
  .col-lg-4 {
    width: 33.33333%; }
  .col-lg-5 {
    width: 41.66667%; }
  .col-lg-6 {
    width: 50%; }
  .col-lg-7 {
    width: 58.33333%; }
  .col-lg-8 {
    width: 66.66667%; }
  .col-lg-9 {
    width: 75%; }
  .col-lg-10 {
    width: 83.33333%; }
  .col-lg-11 {
    width: 91.66667%; }
  .col-lg-12 {
    width: 100%; }
  .col-lg-pull-0 {
    right: auto; }
  .col-lg-pull-1 {
    right: 8.33333%; }
  .col-lg-pull-2 {
    right: 16.66667%; }
  .col-lg-pull-3 {
    right: 25%; }
  .col-lg-pull-4 {
    right: 33.33333%; }
  .col-lg-pull-5 {
    right: 41.66667%; }
  .col-lg-pull-6 {
    right: 50%; }
  .col-lg-pull-7 {
    right: 58.33333%; }
  .col-lg-pull-8 {
    right: 66.66667%; }
  .col-lg-pull-9 {
    right: 75%; }
  .col-lg-pull-10 {
    right: 83.33333%; }
  .col-lg-pull-11 {
    right: 91.66667%; }
  .col-lg-pull-12 {
    right: 100%; }
  .col-lg-push-0 {
    left: auto; }
  .col-lg-push-1 {
    left: 8.33333%; }
  .col-lg-push-2 {
    left: 16.66667%; }
  .col-lg-push-3 {
    left: 25%; }
  .col-lg-push-4 {
    left: 33.33333%; }
  .col-lg-push-5 {
    left: 41.66667%; }
  .col-lg-push-6 {
    left: 50%; }
  .col-lg-push-7 {
    left: 58.33333%; }
  .col-lg-push-8 {
    left: 66.66667%; }
  .col-lg-push-9 {
    left: 75%; }
  .col-lg-push-10 {
    left: 83.33333%; }
  .col-lg-push-11 {
    left: 91.66667%; }
  .col-lg-push-12 {
    left: 100%; }
  .col-lg-offset-0 {
    margin-left: 0%; }
  .col-lg-offset-1 {
    margin-left: 8.33333%; }
  .col-lg-offset-2 {
    margin-left: 16.66667%; }
  .col-lg-offset-3 {
    margin-left: 25%; }
  .col-lg-offset-4 {
    margin-left: 33.33333%; }
  .col-lg-offset-5 {
    margin-left: 41.66667%; }
  .col-lg-offset-6 {
    margin-left: 50%; }
  .col-lg-offset-7 {
    margin-left: 58.33333%; }
  .col-lg-offset-8 {
    margin-left: 66.66667%; }
  .col-lg-offset-9 {
    margin-left: 75%; }
  .col-lg-offset-10 {
    margin-left: 83.33333%; }
  .col-lg-offset-11 {
    margin-left: 91.66667%; }
  .col-lg-offset-12 {
    margin-left: 100%; } }

.modal-open {
  overflow: hidden; }

.modal {
  display: none;
  overflow: hidden;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1050;
  -webkit-overflow-scrolling: touch;
  outline: 0; }
  .modal.fade .modal-dialog {
    -webkit-transform: translate(0, -25%);
    transform: translate(0, -25%);
    transition: -webkit-transform 0.3s ease-out;
    transition: transform 0.3s ease-out; }
  .modal.in .modal-dialog {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }

.modal-open .modal {
  overflow-x: hidden;
  overflow-y: auto; }

.modal-dialog {
  position: relative;
  width: auto;
  margin: 10px; }

.modal-content {
  position: relative;
  background-color: #fff;
  border: 1px solid #999;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 6px;
  box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
  background-clip: padding-box;
  outline: 0; }

.modal-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1040;
  background-color: #000; }
  .modal-backdrop.fade {
    opacity: 0;
    filter: alpha(opacity=0); }
  .modal-backdrop.in {
    opacity: 0.5;
    filter: alpha(opacity=50); }

.modal-header {
  padding: 15px;
  border-bottom: 1px solid #e5e5e5; }
  .modal-header:before, .modal-header:after {
    content: " ";
    display: table; }
  .modal-header:after {
    clear: both; }

.modal-header .close {
  margin-top: -2px; }

.modal-title {
  margin: 0;
  line-height: 1.42857; }

.modal-body {
  position: relative;
  padding: 15px; }

.modal-footer {
  padding: 15px;
  text-align: right;
  border-top: 1px solid #e5e5e5; }
  .modal-footer:before, .modal-footer:after {
    content: " ";
    display: table; }
  .modal-footer:after {
    clear: both; }
  .modal-footer .btn + .btn {
    margin-left: 5px;
    margin-bottom: 0; }
  .modal-footer .btn-group .btn + .btn {
    margin-left: -1px; }
  .modal-footer .btn-block + .btn-block {
    margin-left: 0; }

.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll; }

@media (min-width: 768px) {
  .modal-dialog {
    width: 600px;
    margin: 30px auto; }
  .modal-content {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5); }
  .modal-sm {
    width: 300px; } }

@media (min-width: 992px) {
  .modal-lg {
    width: 900px; } }

/* Barebones Compass element styles
 *
 * General element styles
 */
/* Html styles
 *
 * Html uses base styles, which are inherited globally
 */
html {
  color: #555;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1.5;
  background-color: #fff;
  box-sizing: border-box; }
  html *,
  html *:before,
  html *:after {
    box-sizing: inherit; }

::-moz-selection {
  color: #fff;
  background-color: #177ee6; }

::selection {
  color: #fff;
  background-color: #177ee6; }

/* Custom element styles
 */
p {
  margin: 20px 0; }

figure {
  text-align: center;
  margin: 30px 0; }
  figure img {
    margin: 0 auto;
    display: block;
    max-width: 100%; }

figcaption {
  margin: 10px 0; }

hr {
  margin: 20px 0;
  border: 0;
  border-top: 1px solid #ccc; }

/* Barebones Compass link styles
 *
 * Link element styles
 */
a {
  text-decoration: underline;
  color: #177ee6;
  transition: color 0.15s linear; }
  a:visited {
    color: #5777d9; }
  a:hover, a:focus {
    color: #14ccad; }
  a:active {
    color: #3d5266; }

/* Segmented link
 *
 * Intended for use with icons to avoid icons being underlined:
 *
 *     <a class="link-segmented" href="/profile.html">
 *         <span class="icon-user"></span>
 *         <span class="segment-text">Profile</span>
 *     </a>
 */
.link-segmented {
  text-decoration: none; }
  .link-segmented .segment-text {
    text-decoration: underline; }

/* Ajax link
 *
 * A dotted border is used to underline the link
 *
 * @uses $link-transitions
 * @uses $link-transition-duration
 * @uses $link-transition-function
 */
.link-ajax {
  color: #177ee6;
  text-decoration: none;
  border-bottom-style: dotted;
  border-bottom-width: 1px;
  transition: color 0.15s linear, border-bottom-color 0.15s linear; }
  .link-ajax:visited {
    color: #5777d9;
    border-bottom-color: #5777d9; }
  .link-ajax:hover, .link-ajax:focus {
    color: #14ccad;
    border-bottom-color: #14ccad; }
  .link-ajax:active {
    color: #3d5266;
    border-bottom-color: #3d5266; }
  .link-ajax.link-segmented {
    border-bottom: 0;
    transition: color 0.15s linear; }
    .link-ajax.link-segmented .segment-text {
      border-bottom: 1px 1px #177ee6;
      transition: border-bottom-color 0.15s linear; }
    .link-ajax.link-segmented:visited .segment-text {
      border-bottom-color: #5777d9; }
    .link-ajax.link-segmented:hover .segment-text, .link-ajax.link-segmented:focus .segment-text {
      border-bottom-color: #14ccad; }
    .link-ajax.link-segmented:active .segment-text {
      border-bottom-color: #3d5266; }

/* Barebones Compass header styles
 *
 * Header element styles
 */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: bold;
  line-height: 1.33;
  margin: 20px 0; }

h1,
h2,
h3 {
  margin-top: 35px; }

h1 {
  font-size: 2.25rem; }

h2 {
  font-size: 1.875rem; }

h3 {
  font-size: 1.5rem; }

h4 {
  font-size: 1.125rem; }

h5 {
  font-size: 1rem; }

h6 {
  font-size: 0.875rem; }

/* Barebones Compass list styles
 *
 * List element styles
 */
ul,
ol {
  margin: 20px 0;
  padding: 0;
  padding-left: 20px; }
  ul.list-unstyled,
  ol.list-unstyled {
    padding-left: 0;
    list-style: none; }

li {
  margin: 10px 0; }

/* Barebones Compass table styles
 *
 * Table element styles
 */
table {
  width: 100%; }

td,
th {
  text-align: left;
  padding: 10px 0;
  padding-right: 10px;
  vertical-align: top; }
  td.center,
  th.center {
    text-align: center; }
  td.right,
  th.right {
    text-align: right; }

th {
  font-weight: bold; }
  thead th {
    border-bottom: 1px solid #ccc; }

tfoot {
  border-color: #ccc;
  border-style: solid;
  border-width: 1px 0 1px 0; }

/* Barebones Compass form styles
 *
 * General form styles
 */
select,
label {
  cursor: pointer; }

input[type="radio"],
input[type="checkbox"] {
  margin: 3px 0 0;
  line-height: normal; }

.form {
  margin: 0; }

.form-container {
  margin: 20px 0; }

/* Barebones Compass form styles
 *
 * Form field styles
 */
/*
 * Local variables for form elements
 */
/*
 * Styles starts here
 */
.form-group {
  margin-bottom: 20px; }

label {
  margin-bottom: 5px;
  display: inline-block; }

.form-control {
  margin: 0;
  outline: 0;
  border: 1px solid #d7d7d7;
  padding: 4px 9px;
  transition: border-color .15s linear;
  display: block;
  width: 100%;
  height: 30px; }
  .form-control:focus {
    border-color: #177ee6; }
  .form-control::-webkit-input-placeholder {
    color: #999; }
  .form-control::-moz-placeholder {
    color: #999; }
  .form-control:-ms-input-placeholder {
    color: #999; }
  .form-control::placeholder {
    color: #999; }

select.form-control {
  padding-left: 4px;
  padding-right: 4px; }

textarea.form-control {
  height: auto;
  min-width: 100%;
  min-height: 100px; }

/*
 * Standart input elements
 */
/*
 * Custom input elements
 */
input[type="radio"],
input[type="checkbox"],
input[type="file"] {
  display: none; }

/*
 * Custom radio button
 */
.radio-label {
  padding-left: 25px;
  color: #555;
  display: inline-block;
  width: auto; }
  .radio-label:before {
    content: "";
    width: 15px;
    height: 15px;
    display: inline-block;
    vertical-align: middle;
    margin: -5px 10px 0 -25px;
    border-radius: 50%;
    border: 2px solid transparent;
    box-shadow: 0px 0 0px 2px #ccc, 0 0 0 7px transparent inset;
    transition: box-shadow .15s linear; }
  .radio-label:hover:before {
    box-shadow: 0px 0 0px 2px #61BD7E, 0 0 0 7px transparent inset; }

input[type="radio"]:checked + label:before {
  border-color: transparent;
  box-shadow: 0px 0 0px 2px #ccc, 0 0 0 7px #61BD7E inset; }

input[type="radio"]:checked:hover + label:before {
  border-color: transparent;
  box-shadow: 0px 0 0px 2px #61BD7E, 0 0 0 7px #61BD7E inset; }

/*
 * Custom checkbox
 */
.checkbox-label {
  padding-left: 25px;
  color: #555;
  display: inline-block;
  width: auto; }
  .checkbox-label:before {
    content: "";
    width: 18px;
    height: 18px;
    display: inline-block;
    vertical-align: middle;
    margin: -5px 10px 0 -25px;
    border: 2px solid #ccc;
    transition: border-color .15s linear; }
  .checkbox-label:hover:before {
    border-color: #61BD7E; }

input[type="checkbox"]:checked + .checkbox-label:before {
  content: "\2713";
  border-color: transparent;
  font-size: 20px;
  line-height: 16px;
  color: #61BD7E; }

input[type="checkbox"]:checked:hover + .checkbox-label:before {
  content: "\2713";
  background-color: #eee;
  border-radius: 50%;
  color: #61BD7E; }

/*
 * Toggle
 */
.toggle-label {
  padding-left: 25px;
  color: #555;
  display: inline-block;
  width: auto;
  position: relative;
  cursor: pointer; }
  .toggle-label:before {
    content: "";
    width: 25px;
    height: 2px;
    display: inline-block;
    vertical-align: middle;
    margin: -5px 10px 0 -25px;
    background: #ccc;
    transition: all .15s linear; }
  .toggle-label:after {
    content: "";
    position: absolute;
    border-radius: 50%;
    width: 12px;
    height: 12px;
    background: #fff;
    top: 5px;
    left: 0;
    border: 2px solid #ccc;
    transition: border-color .15s linear, left .1s linear; }

input[type="checkbox"]:checked + .toggle-label:before {
  background: #61BD7E; }

input[type="checkbox"]:checked + .toggle-label:after {
  border-color: #61BD7E;
  left: 13px; }

/* Barebones Compass form styles
 *
 * Form validation styles
 */
.has-success .form-control {
  border-color: #14ccad; }

.has-error .form-control {
  border-color: #f27349; }

.has-error .validation-msg {
  color: #f27349;
  margin: 5px 0 0; }

.btn {
  width: 100%;
  padding: 10px 32px;
  position: relative;
  background-color: #c3b618;
  border: 2px solid #603913;
  outline: none;
  text-transform: uppercase;
  font-weight: 400;
  font-size: 15px;
  color: #fff;
  height: 44px;
  position: relative;
  transition: color .3s linear;
  line-height: 23px;
  cursor: pointer;
  z-index: 1; }
  .btn:before {
    content: "";
    display: block;
    position: absolute;
    left: 0;
    top: 0px;
    width: 36px;
    background-size: contain;
    background-repeat: no-repeat;
    background-position-x: 0;
    height: 40px;
    background-image: url("../images/button-part.png"); }
  .btn:after {
    content: "";
    display: block;
    position: absolute;
    right: 0;
    top: 0px;
    -webkit-transform: rotateZ(-180deg);
            transform: rotateZ(-180deg);
    width: 36px;
    background-size: contain;
    background-repeat: no-repeat;
    background-position-x: 0;
    height: 40px;
    background-image: url("../images/button-part.png"); }
  .btn:hover {
    color: #572c13; }
  .btn.btn-additional {
    background: transparent;
    color: #bacf1c;
    text-transform: none;
    border: 1px solid transparent;
    transition: all .3s linear; }
    .btn.btn-additional:before {
      display: none; }
    .btn.btn-additional:after {
      display: none; }
    .btn.btn-additional:hover {
      border: 1px solid #bacf1c; }
    .btn.btn-additional:active {
      color: #92a700;
      border: 1px solid #92a700; }

.components-content section {
  min-height: 300px;
  width: 100%; }

.head-section {
  height: 100vh;
  width: 100%; }
  .head-section .head-wrap {
    height: 100%; }
  .head-section .carousel {
    height: 100%;
    width: 100%;
    z-index: 11; }
    .head-section .carousel .container {
      width: 100%;
      height: 100%; }
    .head-section .carousel .carousel-inner {
      width: 100%;
      height: 100%; }
    .head-section .carousel .item {
      width: 100%;
      height: 100%;
      opacity: 0;
      transition: opacity .3s ease-in, -webkit-transform .6s ease-in;
      transition: opacity .3s ease-in, transform .6s ease-in; }
      .head-section .carousel .item h1 {
        text-align: center; }
    .head-section .carousel .item.active {
      opacity: 1; }
    .head-section .carousel .item.right, .head-section .carousel .item.left {
      opacity: .7; }
  .head-section .slide-background-wrap .active {
    opacity: 1; }
  .head-section .slide-background-wrap {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100vh; }
  .head-section .slide-background {
    width: 100%;
    height: 100%;
    position: absolute;
    background-size: cover;
    opacity: 0;
    transition: opacity .3s linear;
    -webkit-transform: translateZ(0);
            transform: translateZ(0);
    -webkit-backface-visibility: hidden;
    -ms-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-perspective: 1000px;
    -ms-perspective: 1000px;
    perspective: 1000px; }
  .head-section .head-content {
    -webkit-backface-visibility: hidden;
    -ms-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-perspective: 1000px;
    -ms-perspective: 1000px;
    perspective: 1000px;
    width: 1170px;
    text-align: center;
    margin-left: auto;
    margin-right: auto;
    -webkit-transform: translateX(-50%) translateY(-50%);
            transform: translateX(-50%) translateY(-50%);
    position: absolute;
    top: 50%;
    left: 50%; }
  .head-section .carousel-control-wrap {
    position: absolute;
    height: 0;
    bottom: 0;
    left: 0;
    right: 0; }
    .head-section .carousel-control-wrap .carousel-controllers-container {
      position: relative; }
    .head-section .carousel-control-wrap .counter {
      position: absolute;
      right: 32px;
      color: #fff;
      width: 10px;
      height: 10px;
      bottom: 156px; }
      .head-section .carousel-control-wrap .counter .bold-num {
        font-weight: 800;
        font-size: 40px; }
      .head-section .carousel-control-wrap .counter .number-of-slides {
        font-size: 25px;
        font-weight: 400; }
  .head-section .carousel-control {
    transition: border .15s linear;
    text-decoration: none;
    height: 40px;
    width: 40px;
    right: 0;
    bottom: 20px;
    opacity: 1;
    top: auto;
    border: 1px solid rgba(255, 255, 255, 0.5);
    background-image: none;
    color: #fff; }
    .head-section .carousel-control:before {
      margin-top: 7px;
      margin-left: 4px;
      opacity: .5;
      transition: opacity .15s linear; }
    .head-section .carousel-control.right {
      bottom: 60px; }
    .head-section .carousel-control.left {
      right: 0;
      left: auto;
      left: auto;
      -webkit-transform: scale(-1);
              transform: scale(-1); }
    .head-section .carousel-control:visited {
      color: #000; }
    .head-section .carousel-control:focus {
      opacity: 0.5; }
    .head-section .carousel-control:active {
      opacity: 1; }
    .head-section .carousel-control:hover {
      opacity: 1;
      border: 1px solid white; }
      .head-section .carousel-control:hover:before {
        opacity: 1; }
  .head-section .carousel-indicators {
    left: auto;
    right: 10px;
    width: 20px;
    bottom: 140px; }
    .head-section .carousel-indicators li {
      width: 10px;
      height: 10px;
      border-radius: 0;
      position: relative;
      border: 1px solid rgba(255, 255, 255, 0.5); }
      .head-section .carousel-indicators li:before {
        content: "";
        display: block;
        position: absolute;
        width: 6px;
        height: 6px;
        top: 1px;
        left: 1px;
        border: 1px solid transparent;
        transition: all .3s linear; }
      .head-section .carousel-indicators li.active {
        background-color: transparent; }
        .head-section .carousel-indicators li.active:before {
          border: 1px solid #fff; }

.tabs-section {
  min-height: 250px; }

.main-tabs {
  list-style: none;
  margin: 0;
  padding: 0;
  width: 100%; }
  .main-tabs li {
    display: inline-block;
    float: left;
    width: 33%; }
    .main-tabs li:last-of-type a {
      border-right-color: #000;
      border-radius: 0 3px 3px 0; }
    .main-tabs li:first-of-type a {
      border-radius: 3px 0 0 3px; }
    .main-tabs li a {
      display: block;
      width: 100%;
      height: 50px;
      vertical-align: middle;
      line-height: 50px;
      margin: 0 auto;
      text-decoration: none;
      font-size: 16px;
      font-weight: bold;
      color: #000;
      cursor: pointer;
      border: 1px solid #000;
      border-right-color: transparent;
      text-align: center;
      transition: border, background-color .15s linear; }
      .main-tabs li a:hover {
        background: rgba(0, 0, 0, 0.1); }
    .main-tabs li.active a {
      background: #000;
      color: #fff;
      background-image: #000; }

.tab-content {
  position: relative;
  padding: 10px 30px 0; }
  .tab-content > .tab-pane {
    display: none;
    visibility: hidden; }
  .tab-content > .tab-pane.active {
    display: block;
    visibility: visible; }
  .tab-content .fade {
    opacity: 0;
    transition: opacity .15s linear; }
  .tab-content .fade.in {
    opacity: 1; }

.collapse-item {
  margin-bottom: 10px; }
  .collapse-item > a {
    position: relative; }
  .collapse-item a:hover h3 {
    display: inline-block;
    color: #333;
    border-bottom: 1px dotted #333;
    padding: 0;
    margin: 0;
    transition: all .15s linear; }
  .collapse-item a:hover .icon-collapse-arrow {
    border-top-color: #333; }

.collapse-block > a {
  display: block;
  position: relative; }

.collapse-block h3 {
  display: inline-block;
  color: #000;
  border-bottom: 1px dotted #000;
  padding: 0;
  margin: 0;
  transition: all .15s linear; }

.collapse-block .collapsed h3 {
  color: #000;
  border-bottom-color: #000; }

.well p {
  margin: 0;
  padding: 15px 0 10px; }

.icon-collapse-arrow {
  position: absolute;
  display: block;
  width: 0;
  height: 0;
  top: 4px;
  right: -25px;
  border: 9px solid transparent;
  border-top: 9px solid #000;
  border-bottom: none; }

.icon-collapse-arrow {
  transition: -webkit-transform .3s ease;
  transition: transform .3s ease;
  -webkit-transform-origin: 50% 40%;
          transform-origin: 50% 40%;
  display: inline-block;
  border-bottom: 0px solid transparent; }
  .icon-collapse-arrow:before {
    transition: -webkit-transform .3s ease;
    transition: transform .3s ease;
    display: inline-block; }

.up-arrow {
  -webkit-transform: rotateZ(180deg) !important;
          transform: rotateZ(180deg) !important; }

.dropdown-block {
  position: relative;
  display: inline-block;
  width: auto;
  cursor: pointer;
  z-index: 20;
  color: #fff;
  background-color: #000; }
  .dropdown-block .myDropdownBtn {
    height: 50px;
    line-height: 50px;
    padding: 0 20px;
    font-weight: bold; }
  .dropdown-block .myDropdown {
    left: 0;
    top: 50px;
    width: 100%;
    background-color: #000;
    border: none;
    color: #fff;
    font-size: 16px;
    border-radius: 0;
    margin-top: 1px; }
    .dropdown-block .myDropdown:after {
      content: ' ';
      display: block;
      position: absolute;
      top: -5px;
      right: 7px;
      width: 0;
      height: 0;
      border-style: solid;
      border-width: 0 5px 5px 5px;
      border-color: transparent transparent #fff transparent; }
    .dropdown-block .myDropdown li {
      margin: 0;
      padding: 0; }
      .dropdown-block .myDropdown li a {
        display: block;
        padding: 5px 10px;
        color: #fff;
        text-decoration: none;
        transition: all 0s linear; }
      .dropdown-block .myDropdown li:hover a {
        background-color: #fff;
        color: #000; }
    .dropdown-block .myDropdown .dropdown-collapse li {
      margin: 0;
      padding: 0; }
      .dropdown-block .myDropdown .dropdown-collapse li a {
        display: block;
        padding: 5px 10px;
        color: #fff;
        text-decoration: none; }
      .dropdown-block .myDropdown .dropdown-collapse li:hover a {
        background-color: #fff;
        color: #000; }
  .dropdown-block .myCollapse ul {
    margin: 0;
    padding: 0; }
  .dropdown-block .myCollapse li {
    list-style: none; }
  .dropdown-block .myCollapse .colapse-link {
    display: block;
    position: relative;
    border-bottom: 1px solid #40536b; }
    .dropdown-block .myCollapse .colapse-link:after {
      content: ' ';
      display: block;
      position: absolute;
      top: 10px;
      right: 5px;
      width: 0;
      height: 0;
      border-style: solid;
      border-width: 0 5px 5px 5px;
      border-color: transparent transparent #40536b transparent; }
  .dropdown-block .myCollapse.collapsed .colapse-link:after {
    border-width: 5px 5px 0 5px;
    border-color: #40536b transparent transparent transparent; }
  .dropdown-block .myCollapse .li-line {
    display: block;
    width: 100%;
    height: 1px;
    background-color: #7e94aa; }

input[type="file"] {
  display: block;
  position: absolute;
  cursor: pointer;
  opacity: 0;
  z-index: 11;
  width: 100%;
  height: 100%; }

.file-input-cont {
  cursor: pointer;
  position: relative;
  display: block;
  width: 500px;
  height: 70px; }
  .file-input-cont:hover .file-label {
    background-color: rgba(0, 0, 0, 0.05); }
  .file-input-cont:hover .img-container {
    background-color: #555; }
  .file-input-cont .img-container {
    position: absolute;
    top: 10px;
    left: 20px;
    display: inline-block;
    width: 100px;
    height: 50px;
    background-color: #000;
    transition: all 0.15s linear; }

.file-label {
  position: relative;
  display: block;
  left: 0;
  width: 100%;
  height: 100%;
  border: 1px dashed;
  text-align: left;
  border-radius: 4px;
  padding-left: 150px;
  line-height: 70px;
  border: 1px dashed #000;
  transition: all 0.15s linear;
  cursor: pointer; }
  .file-label.filed {
    border-color: #00cf8d;
    color: #00cf8d; }

.fade {
  opacity: 0;
  transition: opacity .15s linear; }

.hidden {
  display: none;
  opacity: 0; }

.collapse {
  display: none;
  visibility: hidden; }

.collapse.in {
  display: block;
  visibility: visible; }

.collapsing {
  position: relative;
  height: 0;
  overflow: hidden;
  transition-timing-function: ease;
  transition-duration: .15s;
  transition-property: height, visibility; }

.scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll; }

/* Barebones Compass block styles
 *
 * General block styles
 */
.layout-header {
  font-family: 'ProximaNova';
  height: 137px;
  position: fixed;
  background-color: rgba(0, 0, 0, 0.6);
  transition: opacity .2s linear;
  left: 0;
  right: 0;
  top: 0;
  z-index: 11111;
  line-height: 127px;
  text-align: center; }
  .layout-header .logo {
    display: inline-block;
    vertical-align: middle; }
    .layout-header .logo .logo-link {
      display: block; }
      .layout-header .logo .logo-link img {
        display: inherit; }
  .layout-header .nav {
    display: inline-block;
    margin: 0;
    padding: 0;
    line-height: 137px; }
    .layout-header .nav li {
      margin: 0;
      display: inline-block; }
      .layout-header .nav li a {
        display: block;
        text-transform: uppercase;
        text-decoration: none;
        color: #fff;
        font-weight: 700;
        font-size: 17px;
        transition: all .3s linear;
        margin-right: 20px; }
        .layout-header .nav li a:hover {
          color: #f7e754; }
        .layout-header .nav li a:active {
          color: #cfbf2c; }
  .layout-header .social-header {
    display: inline-block; }
    .layout-header .social-header [class^="fr-"]:before,
    .layout-header .social-header [class*=" fr-"]:before {
      color: #fff;
      font-size: 28px;
      margin-right: 10px;
      transition: color .3s linear; }
    .layout-header .social-header [class*=" fr-"], .layout-header .social-header [class^="fr-"] {
      display: inline-block; }
      .layout-header .social-header [class*=" fr-"]:hover:before, .layout-header .social-header [class^="fr-"]:hover:before {
        color: #f7e754; }
  .layout-header .order-btn-cont {
    display: inline-block;
    line-height: 137px; }

.left-header {
  float: left; }

.right-header {
  float: right; }

h2 {
  font-size: 40px;
  font-weight: 800; }

h3 {
  font-size: 30px;
  font-weight: 400; }

.head-wrap h2 {
  color: #fff;
  line-height: 1; }

.head-wrap h3 {
  color: #fff;
  line-height: 34px;
  margin-top: 10px; }

.carousel-inner .button-cont {
  position: absolute;
  top: 80%;
  width: 360px;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%); }

[class^="fr-"]:before,
[class*=" fr-"]:before {
  display: inline-block;
  vertical-align: middle; }

.arrow-down-scroll {
  position: absolute;
  z-index: 11;
  bottom: 20px;
  width: 44px;
  height: 44px;
  border: 2px solid transparent;
  left: 50%;
  -webkit-transform: translate3d(-50%, 0, 0);
  transform: translate3d(-50%, 0, 0);
  box-shadow: inset 0 0 0 2px #fff, 0 0 0 2px rgba(255, 255, 255, 0.4);
  cursor: pointer;
  box-sizing: content-box;
  transition: all .15s ease-in-out; }
  .arrow-down-scroll .fr-arrow {
    color: #fff;
    font-size: 27px;
    margin-bottom: 0px;
    margin-top: 4px;
    vertical-align: middle;
    display: inline-block;
    -webkit-transform: rotateZ(90deg);
    transform: rotateZ(90deg);
    margin-left: 9px; }
    .arrow-down-scroll .fr-arrow:before {
      display: inline-block; }
  .arrow-down-scroll:hover {
    box-shadow: inset 0 0 0 2px #fff, 0 0 0 2px rgba(255, 255, 255, 0.8);
    border: 4px solid transparent; }

.layout-content {
  margin: 0 !important; }
  .layout-content h3 {
    font-size: 40px;
    font-weight: 800;
    margin: 5px 0; }
  .layout-content h4 {
    font-size: 30px;
    font-weight: 300;
    color: #c4b815;
    margin: 0;
    text-align: center; }

.allow-you {
  position: relative;
  padding-bottom: 60px; }
  .allow-you .square {
    width: 120px;
    height: 120px;
    border: 5px solid #f7f7f7;
    position: absolute;
    top: -5px;
    left: 50%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%); }
  .allow-you h3 {
    text-align: center;
    color: #747622; }
  .allow-you .allow-block .img-cont {
    width: 80%;
    margin: 0 auto; }
  .allow-you .allow-block .descr .header-cont {
    line-height: 58px;
    text-align: center;
    min-height: 74px;
    margin-top: 40px; }
    .allow-you .allow-block .descr .header-cont h5 {
      font-size: 22px;
      margin-top: 5px;
      line-height: 1;
      font-weight: 800;
      text-align: center;
      display: inline-block;
      margin-bottom: 0; }
  .allow-you .allow-block .descr p {
    text-align: center;
    margin-top: 10px;
    color: #717171;
    font-size: 17px;
    font-weight: 400; }
  .allow-you .allow-wrap {
    padding-top: 100px; }

.counter {
  font-size: 33px; }

.orange-header {
  color: #f0c64a; }

.green-header {
  color: #c9c515; }

.red-header {
  color: #ae6933; }

.light-green-header {
  color: #b9cc3f; }

.who-we {
  padding-bottom: 100px; }
  .who-we .header-divider {
    background-image: url("../images/who-we-are.png");
    background-size: cover;
    height: 400px;
    background-position: center center;
    background-attachment: fixed; }
  .who-we .who-we-wrap {
    text-align: center;
    padding-top: 100px; }
    .who-we .who-we-wrap .img-wrap {
      display: inline-block; }
    .who-we .who-we-wrap .descr-wrap {
      padding-bottom: 30px; }
      .who-we .who-we-wrap .descr-wrap h2 {
        font-size: 25px;
        font-weight: 700;
        text-align: left;
        position: relative;
        display: block;
        margin-top: 10px; }
        .who-we .who-we-wrap .descr-wrap h2.green {
          padding-bottom: 10px;
          margin-bottom: 0;
          color: #819f46; }
          .who-we .who-we-wrap .descr-wrap h2.green:after {
            content: '';
            display: block;
            position: absolute;
            bottom: 0;
            left: -15%;
            width: 30%;
            height: 2px;
            background-color: #819f46; }
      .who-we .who-we-wrap .descr-wrap p {
        text-align: left;
        font-size: 18px; }
      .who-we .who-we-wrap .descr-wrap ul {
        text-align: left; }
        .who-we .who-we-wrap .descr-wrap ul li {
          list-style-image: url("../images/list-style.png");
          font-size: 18px; }

body {
  overflow-x: hidden;
  font-family: "ProximaNova" !important; }

.programs .header-divider {
  height: 400px;
  background-image: url("../images/programs.jpg");
  background-size: cover;
  background-position: center center;
  background-attachment: fixed; }

.programs h2 {
  font-weight: 700; }

.programs .card-wrap {
  position: relative; }

.programs .card-itself {
  position: relative;
  padding: 0 20px;
  width: 100%;
  border: 2px solid #e1e1e1;
  height: 350px;
  position: relative;
  z-index: 11;
  background: #fff;
  background-image: url("../images/card-3-bg.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center; }
  .programs .card-itself .regular-header {
    color: #5b5b5b;
    display: inline-block;
    font-size: 23px;
    font-weight: 700; }
  .programs .card-itself .bold-headr {
    display: inline-block;
    font-weight: 800;
    color: #c4b815;
    font-size: 23px; }
  .programs .card-itself .card-header {
    padding-top: 91px; }
    .programs .card-itself .card-header span {
      color: #c4b815;
      font-size: 16px; }
    .programs .card-itself .card-header .right-head {
      float: right; }
  .programs .card-itself .card-descr p {
    margin-top: 0;
    font-size: 16px;
    color: #5b5b5b; }
  .programs .card-itself .card-buttons {
    margin-top: 15px;
    position: absolute;
    bottom: 13px;
    border-top: 1px solid #e1e1e1;
    padding-top: 20px;
    width: 89%; }
    .programs .card-itself .card-buttons .btn {
      width: 128px;
      text-align: center;
      height: 40px;
      padding: 7px 0;
      border: 1px solid #ffc000;
      background-color: transparent;
      color: #ffc000;
      text-transform: none; }
      .programs .card-itself .card-buttons .btn:first-of-type {
        float: left; }
      .programs .card-itself .card-buttons .btn:last-of-type {
        float: right; }
      .programs .card-itself .card-buttons .btn.btn-additional {
        background: transparent;
        color: #bacf1c;
        text-transform: none;
        border: 1px solid transparent;
        transition: all .3s linear; }
        .programs .card-itself .card-buttons .btn.btn-additional:before {
          display: none; }
        .programs .card-itself .card-buttons .btn.btn-additional:after {
          display: none; }
        .programs .card-itself .card-buttons .btn.btn-additional:hover {
          border: 1px solid #bacf1c; }
        .programs .card-itself .card-buttons .btn.btn-additional:active {
          color: #92a700;
          border: 1px solid #92a700; }
      .programs .card-itself .card-buttons .btn:before {
        display: none; }
      .programs .card-itself .card-buttons .btn:after {
        display: none; }
    .programs .card-itself .card-buttons .button-cont {
      float: left;
      position: relative; }
      .programs .card-itself .card-buttons .button-cont .btn {
        float: left; }
      .programs .card-itself .card-buttons .button-cont img {
        position: absolute;
        opacity: 0;
        transition: all .3s linear;
        width: 100%;
        max-height: 100%;
        left: 0; }
      .programs .card-itself .card-buttons .button-cont:hover .btn {
        border: 1px solid #562b12;
        color: #fff; }
      .programs .card-itself .card-buttons .button-cont:hover img {
        opacity: 1; }
  .programs .card-itself.first-step {
    background-image: url("../images/first-stem-bg.png"); }
  .programs .card-itself.second-step {
    background-image: url("../images/second-step-bg.png"); }
  .programs .card-itself.fourth-step {
    background-image: url("../images/fourth-step-bg.png"); }
  .programs .card-itself.fifth-step {
    background-image: url("../images/fifth-step-bg.png"); }
  .programs .card-itself.sixth-step {
    background-image: url("../images/sixth-step-bg.png"); }

.programs .programs-header {
  padding-bottom: 100px; }
  .programs .programs-header h2 {
    margin-top: 54px; }

.programs .card-number {
  top: -132px;
  position: absolute;
  z-index: 0;
  font-size: 150px;
  font-weight: 800;
  color: #f7f7f7; }

.programs .cards-row {
  margin-bottom: 100px; }

.center {
  text-align: center; }

.care {
  padding-bottom: 100px; }
  .care .header-divider {
    height: 400px;
    background-image: url("../images/care-bg.jpg");
    background-attachment: fixed;
    background-position: center center;
    margin-bottom: 100px; }
  .care #CareCarousel {
    height: 500px; }
    .care #CareCarousel .carousel-inner {
      height: 100%; }
      .care #CareCarousel .carousel-inner .item {
        height: 100%; }
        .care #CareCarousel .carousel-inner .item img {
          height: 100%;
          margin: 0 auto; }
    .care #CareCarousel .carousel-control {
      transition: border .15s linear;
      text-decoration: none;
      height: 40px;
      width: 40px;
      right: 0;
      bottom: 235px;
      opacity: 1;
      top: auto;
      border: 1px solid #e6e6e6;
      background-image: none;
      color: #acacac;
      text-shadow: none;
      opacity: 1; }
      .care #CareCarousel .carousel-control:before {
        margin-top: 7px;
        margin-left: 4px;
        opacity: 1;
        transition: color .15s linear; }
      .care #CareCarousel .carousel-control.right {
        bottom: 275px; }
      .care #CareCarousel .carousel-control.left {
        right: 0;
        left: auto;
        -webkit-transform: scale(-1);
                transform: scale(-1); }
      .care #CareCarousel .carousel-control:visited {
        color: #000; }
      .care #CareCarousel .carousel-control:focus {
        opacity: 0.5; }
      .care #CareCarousel .carousel-control:active {
        opacity: 1; }
      .care #CareCarousel .carousel-control:hover {
        opacity: 1;
        border: 1px solid #d2d2d2;
        color: #989898; }
        .care #CareCarousel .carousel-control:hover:before {
          opacity: 1; }
    .care #CareCarousel .carousel-indicators {
      width: 20px;
      right: 10px;
      left: auto;
      bottom: 315px;
      z-index: 111111111; }
      .care #CareCarousel .carousel-indicators li {
        width: 10px;
        height: 10px;
        border-radius: 0;
        position: relative;
        border: 1px solid #e6e6e6; }
        .care #CareCarousel .carousel-indicators li:before {
          content: "";
          display: block;
          position: absolute;
          width: 6px;
          height: 6px;
          top: 1px;
          left: 1px;
          border: 1px solid transparent;
          transition: all .3s linear; }
        .care #CareCarousel .carousel-indicators li.active {
          background-color: transparent; }
          .care #CareCarousel .carousel-indicators li.active:before {
            border: 1px solid #acacac; }
  .care .care-descr .care-descr-header {
    position: relative;
    margin-bottom: 23px; }
    .care .care-descr .care-descr-header:after {
      content: '';
      display: block;
      position: absolute;
      width: 200px;
      height: 4px;
      left: -20px;
      background: #73ba33; }
  .care .care-descr h2 {
    color: #73ba33;
    text-transform: uppercase;
    font-size: 31px;
    margin-bottom: 0; }
  .care .care-descr h1 {
    margin-top: 0;
    color: #73ba33;
    text-transform: uppercase;
    font-size: 44px;
    margin-bottom: 5px; }
  .care .care-descr-text p {
    font-size: 20px; }
  .care .cared-descr-bottom-text {
    padding-top: 20px; }
    .care .cared-descr-bottom-text p {
      font-weight: 700;
      font-size: 20px;
      color: #c8dd3e; }

.how-it-works {
  padding-bottom: 100px; }
  .how-it-works .header-divider {
    height: 400px;
    background-image: url("../images/how-it-works-bg.jpg");
    background-position: center center;
    background-attachment: fixed; }
  .how-it-works .how-card {
    position: relative; }
    .how-it-works .how-card .how-num {
      top: -145px;
      position: absolute;
      z-index: 0;
      font-size: 150px;
      right: 15px;
      font-weight: 800;
      color: #f7f7f7; }
    .how-it-works .how-card .how-img {
      position: relative;
      z-index: 1;
      margin-bottom: 20px; }
    .how-it-works .how-card .arrow-cont {
      position: absolute;
      top: -50px;
      right: -250px;
      z-index: 2; }
  .how-it-works .how-it-works-wrap {
    padding-top: 150px; }
  .how-it-works .how-descr {
    text-align: center; }
    .how-it-works .how-descr:before {
      content: '';
      display: block;
      margin-top: 10px;
      height: 5px;
      width: 60px;
      margin: 0 auto;
      background: #73ba33; }
    .how-it-works .how-descr p {
      font-size: 18px;
      margin-top: 15px; }

.every-day h2 {
  font-size: 35px; }

.blog .header-divider {
  height: 400px;
  background-image: url("../images/blog-bg.png");
  background-position: center center;
  background-attachment: fixed; }

.blog .blog-wrapper {
  padding-top: 100px; }

.blog .blog-thumbnail img {
  max-width: 100%;
  margin: 0 auto; }

.blog .blog-header {
  position: relative; }
  .blog .blog-header:before {
    content: "";
    display: block;
    position: absolute;
    width: 200px;
    height: 4px;
    top: -3px;
    left: -70px;
    background: #819f46; }
  .blog .blog-header h2 {
    font-size: 28pxpx;
    font-weight: 700;
    margin-top: 15px; }

a {
  color: #bacf1c; }
  a:hover {
    color: #cee330; }
  a:active {
    color: #a6bb08; }
  a:visited {
    color: #bacf1c; }

.items-wrap-small:after {
  display: none; }

.hide-block-cntr {
  display: none; }

.margin-row {
  margin-bottom: 100px; }

.head-content .col-lg-2 {
  display: block !important; }

.modal {
  z-index: 9999999999; }
  .modal.in {
    opacity: 1; }
  .modal .modal-header {
    border-bottom: none; }

.modal-open .layout-header {
  opacity: 0; }

.order-modal .modal-dialog {
  width: 600px; }
  .order-modal .modal-dialog .modal-content {
    border-radius: 0;
    padding-top: 30px;
    padding-left: 10px;
    padding-right: 10px;
    padding-bottom: 10px; }
  .order-modal .modal-dialog .btn {
    width: 360px;
    display: block;
    margin: 0 auto;
    height: 60px;
    font-size: 22px;
    margin-top: 45px; }
    .order-modal .modal-dialog .btn:before {
      height: 57px; }
    .order-modal .modal-dialog .btn:after {
      height: 57px; }

.order-modal h4 {
  font-size: 20px;
  text-transform: uppercase;
  margin-bottom: 20px; }

.modal-header {
  padding-bottom: 0; }
  .modal-header .close {
    cursor: pointer;
    opacity: .5;
    top: -40px;
    right: 0;
    position: absolute;
    display: block;
    width: 30px;
    height: 30px;
    text-align: center;
    line-height: 30px;
    text-decoration: none;
    font-size: 26px;
    color: #fff;
    z-index: 111;
    transition: opacity .3s linear;
    border: 1px solid #fff;
    border-radius: 50%; }
    .modal-header .close:hover {
      opacity: 1; }

.modal-dialog {
  position: absolute;
  top: 45%;
  left: 50%;
  -webkit-transform: translateY(-50%) translateX(-50%) !important;
          transform: translateY(-50%) translateX(-50%) !important; }

.form-control {
  height: 60px;
  padding-left: 20px;
  color: #000;
  font-size: 18px; }
  .form-control::-webkit-input-placeholder {
    color: #000; }
  .form-control::-moz-placeholder {
    color: #000; }
  .form-control:-ms-input-placeholder {
    color: #000; }
  .form-control::placeholder {
    color: #000; }

.details-modal .modal-dialog {
  width: auto; }
  .details-modal .modal-dialog .modal-content {
    border-radius: 0; }
  .details-modal .modal-dialog .header-left {
    float: left; }
    .details-modal .modal-dialog .header-left h3 {
      font-size: 32px;
      font-weight: 700;
      margin-top: 25px;
      margin-bottom: 10px;
      margin-top: 15px; }
  .details-modal .modal-dialog .header-right {
    float: right;
    text-align: right; }
    .details-modal .modal-dialog .header-right h3 {
      font-weight: 400;
      font-size: 32px;
      margin-top: 25px;
      margin-bottom: 10px;
      margin-top: 15px; }

.details-modal .header-modal {
  border-bottom: 1px solid #e1e1e1; }

.details-modal .first-block {
  border-bottom: 1px solid #e1e1e1;
  padding-bottom: 10px; }
  .details-modal .first-block h3 {
    clear: left;
    margin-top: 10px; }

.details-modal .modal-main {
  padding: 0 15px; }

.details-modal .menu-block {
  float: left;
  width: 264px;
  margin-right: 100px; }
  .details-modal .menu-block h4 {
    margin-bottom: 0;
    padding-left: 20px;
    border-bottom: 1px solid #e1e1e1; }
  .details-modal .menu-block ul {
    margin: 0; }
    .details-modal .menu-block ul li {
      margin: 5px 0;
      list-style-image: url(../images/list-yellow.jpg);
      font-size: 16px;
      line-height: 1.2; }

.details-modal .yellow-bold {
  font-weight: 800 !important;
  color: #c4b815 !important; }

.details-modal .yellow-kkal {
  color: #c4b815;
  font-size: 15px !important;
  font-weight: 400; }

.details-modal .first-block p {
  font-size: 16px;
  margin-top: 10px;
  margin-bottom: 0; }

.details-modal .first-block h3 {
  margin-bottom: 0; }

.details-modal .second-block h3 {
  font-size: 27px;
  margin-top: 10px;
  margin-bottom: 0px; }

.details-modal .modal-btn {
  padding: 50px 0; }
  .details-modal .modal-btn .btn {
    width: 360px;
    display: block;
    margin: 0 auto;
    height: 50px;
    text-align: center;
    font-size: 22px;
    line-height: 27px; }
    .details-modal .modal-btn .btn:before {
      height: 46px; }
    .details-modal .modal-btn .btn:after {
      height: 46px; }

.details-modal .close {
  cursor: pointer;
  opacity: .5;
  top: -40px;
  right: 0;
  position: absolute;
  display: block;
  width: 30px;
  height: 30px;
  text-align: center;
  line-height: 30px;
  text-decoration: none;
  font-size: 26px;
  color: #fff;
  z-index: 111;
  transition: opacity .3s linear;
  border: 1px solid #fff;
  border-radius: 50%; }
  .details-modal .close:hover {
    opacity: 1; }

.blog-head {
  height: 400px;
  background-image: url("../images/blog-bg.png");
  background-size: cover;
  background-position: center center; }

.blog-post {
  margin-top: -100px; }
  .blog-post .blog-img-cont img {
    max-width: 100%; }
  .blog-post .blog-header {
    line-height: 65px; }
    .blog-post .blog-header h2 {
      margin-top: 0px;
      float: left; }
    .blog-post .blog-header .blog-date {
      float: right;
      font-weight: 700; }
  .blog-post ul {
    text-align: left; }
    .blog-post ul li {
      list-style-image: url("../images/list-style.png");
      font-size: 18px; }

.close-menu {
  display: none; }

.menu-icon {
  display: none; }

.thank-you-modal .modal-content {
  padding-top: 50px;
  padding-bottom: 30px; }

.thank-you-modal .thank-you-img img {
  display: block;
  margin: 0 auto; }

.thank-you-modal .text h2 {
  font-weight: 400;
  font-size: 20px;
  text-transform: uppercase;
  text-align: center; }

.thank-you-modal .close {
  cursor: pointer;
  opacity: .5;
  top: -40px;
  right: 0;
  position: absolute;
  display: block;
  width: 30px;
  height: 30px;
  text-align: center;
  line-height: 30px;
  text-decoration: none;
  font-size: 26px;
  color: #fff;
  z-index: 111;
  transition: opacity .3s linear;
  border: 1px solid #fff;
  border-radius: 50%; }

.details-modal .modal-dialog {
  top: 50px;
  -webkit-transform: translateY(0) translateX(-50%) !important;
          transform: translateY(0) translateX(-50%) !important; }

.barebones-link {
  padding: 0 0 0 25px;
  position: relative; }
  .barebones-link .svg-icon-animated:before {
    background-image: svg("facebook"); }
  .barebones-link .svg-icon-animated:after {
    background-image: svg("facebook", "[fill]: #aaa"); }
  .barebones-link .icon { background-image: url(../images/sprite.png); background-position: 0 0; width: 20px; height: 20px; }

/* Barebones Compass layout styles
 *
 * General layout styles
 */
.layout-content {
  margin: 0 20px; }

/* Default layout container width
 *
 * NOTE: This should not be changed here. Change it in base/_variable.scss
 *
 * @see base/_variable.scss
 */
.layout-container {
  width: 1170px;
  margin: 0 auto; }

.layout-container-fluid {
  margin: 0 auto; }

@media (min-width: 993px) {
  .col-sm-1 {
    display: none; }
  .col-sm-2 {
    display: none; }
  .layout-container {
    min-width: 1000px;
    width: 1000px; } }

@media (max-width: 992px) {
  .layout-header .nav {
    display: none; }
  .layout-header.active .nav {
    height: 100vh !important;
    width: 100vw;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    padding-top: 140px;
    position: fixed;
    display: block;
    background-color: rgba(39, 39, 39, 0.9); }
    .layout-header.active .nav li {
      display: block;
      width: 100%;
      line-height: 30px; }
      .layout-header.active .nav li a {
        font-size: 35px;
        padding: 20px 0;
        margin: 0 !important; }
  .layout-header .social-header {
    position: absolute;
    top: 8px;
    right: 75px;
    display: block;
    z-index: -1; }
  .order-btn {
    display: none; }
  .menu-icon {
    height: 50px;
    width: 30px;
    position: fixed;
    display: block;
    top: 40px;
    right: 40px;
    z-index: 9999; }
    .menu-icon.active .hamb {
      background-color: transparent;
      transition: background-color 0s 0s linear; }
      .menu-icon.active .hamb:after {
        -webkit-transform: rotateZ(45deg) translate(8px, 6px);
                transform: rotateZ(45deg) translate(8px, 6px); }
      .menu-icon.active .hamb:before {
        -webkit-transform: rotateZ(-45deg) translate(8px, -6px);
                transform: rotateZ(-45deg) translate(8px, -6px); }
    .menu-icon .hamb {
      display: block;
      position: absolute;
      top: 50%;
      left: 0;
      width: 30px;
      height: 2px;
      border-radius: 5px;
      background-color: #fff;
      transition: background-color 0s .15s linear; }
      .menu-icon .hamb:after, .menu-icon .hamb:before {
        display: block;
        position: absolute;
        content: "";
        width: 30px;
        height: 2px;
        border-radius: 5px;
        background-color: #fff;
        transition: -webkit-transform .15s linear;
        transition: transform .15s linear;
        -webkit-transform-origin: 50% 50%;
                transform-origin: 50% 50%; }
      .menu-icon .hamb:after {
        top: -10px;
        left: 0; }
      .menu-icon .hamb:before {
        bottom: -10px;
        left: 0; } }

@media (min-width: 750px) and (max-width: 992px) {
  .details-modal .modal-dialog {
    width: 550px; }
  .layout-container {
    min-width: 750px;
    width: 750px; }
  .items-wrap-small {
    clear: both; }
    .items-wrap-small:after {
      content: '';
      display: table;
      height: 1px;
      clear: both; }
  .head-section .head-content {
    width: 750px; }
  #myCarousel .carousel-control-wrap {
    display: none; }
  #CareCarousel .carousel-control.left {
    right: auto !important;
    left: 0 !important;
    top: 176px !important; }
  .who-we .who-we-wrap .img-wrap img {
    max-width: 100%; }
  .who-we .who-we-wrap .btn {
    margin-top: 15px; }
  .hide-block-cntr {
    padding-top: 10px;
    padding-bottom: 0;
    display: block;
    font-size: 20px;
    margin-top: -25px; }
    .hide-block-cntr a {
      border-radius: 50%;
      border-radius: 50%;
      text-decoration: none;
      border: 1px solid  #0f0f0f;
      width: 30px;
      height: 30px;
      color: #0f0f0f !important;
      display: inline-block;
      text-align: center;
      vertical-align: middle; }
  .hide-block {
    max-height: 0;
    overflow: hidden;
    transition: max-height .3s ease; }
    .hide-block.active {
      max-height: 1500px; }
  .margin-row:after {
    display: none; }
  .card-itself {
    margin-bottom: 100px; }
  .care-descr h1, .care-descr h2 {
    text-align: center; }
  .care .care-descr .care-descr-header:after {
    left: 50%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%); }
  .care .cared-descr-bottom-text {
    padding-top: 0; }
    .care .cared-descr-bottom-text p {
      text-align: center; }
  .care .care-descr-text p {
    margin-bottom: 0px;
    text-align: justify; }
  .how-it-works .how-card .arrow-cont {
    display: none; }
  .how-it-works .items-wrap-small {
    margin-bottom: 100px; }
  .every-day {
    display: none; }
  .layout-footer {
    height: 262px !important; }
    .layout-footer .btn {
      width: 250px;
      margin: 0 auto;
      display: block; }
  .header-divider {
    height: 200px !important;
    background-attachment: scroll !important;
    background-size: cover !important; }
  .details-modal .modal-dialog {
    height: 323px;
    top: 50px;
    -webkit-transform: translateY(0) translateX(-50%) !important;
            transform: translateY(0) translateX(-50%) !important; }
    .details-modal .modal-dialog .modal-content .img-cont img {
      max-width: 100%; }
  .details-modal .modal-dialog .header-right {
    float: left;
    text-align: right; }
    .details-modal .modal-dialog .header-right h3 {
      margin-top: -11px; } }

@media (max-width: 749px) {
  .layout-container {
    width: 300px; }
  .allow-you .allow-wrap {
    padding-top: 30px; }
  .allow-you .allow-block .descr .header-cont {
    line-height: 38px;
    text-align: center;
    min-height: 43px;
    margin-top: 10px; }
  .allow-you .allow-block .descr p {
    margin-top: 0; }
  .who-we .who-we-wrap .img-wrap img {
    max-width: 100%; }
  .social-header {
    display: none !important; }
  .header-divider {
    background-attachment: scroll !important;
    background-size: cover !important;
    height: 200px !important; }
  .how-it-works .how-card .how-num {
    z-index: -1; }
  .how-it-works .how-it-works-wrap {
    padding-top: 90px; }
  .blog .blog-wrapper {
    padding-top: 50px; }
  .layout-footer {
    height: 440px !important;
    padding-top: 20px; }
  .layout-content:after {
    content: "";
    display: block;
    height: 50px !important; }
  .every-day h2 {
    margin-top: 0px; }
  .how-it-works .how-card .arrow-cont {
    display: none; }
  .how-it-works {
    padding-bottom: 50px; }
  .care {
    padding-bottom: 50px; }
  .care .header-divider {
    margin-bottom: 50px; }
  .programs .cards-row {
    margin-bottom: 0; }
  .programs .card-itself {
    margin-bottom: 80px; }
  .menu-icon {
    right: 30px; }
  .margin-row {
    margin-bottom: 0; }
  .programs .programs-header h2 {
    margin-top: 20px; }
  .programs .programs-header {
    padding-bottom: 50px; }
  .who-we {
    padding-bottom: 50px; }
  .who-we .who-we-wrap {
    padding-top: 50px; }
  .layout-content {
    padding-top: 50px !important; }
  #myCarousel .carousel-control-wrap {
    display: none; }
  #CareCarousel .carousel-control.left {
    right: auto !important;
    left: 0 !important;
    top: 176px !important; }
  .arrow-down-scroll {
    display: none; }
  .head-content {
    width: 100% !important; }
  .head-wrap h2 {
    font-size: 22px; }
  .head-wrap h3 {
    font-size: 16px;
    line-height: 24px; }
  .details-modal .modal-dialog {
    height: 323px;
    top: 50px;
    margin-top: 0 !important;
    -webkit-transform: translate(0, 0) !important;
            transform: translate(0, 0) !important; }
    .details-modal .modal-dialog .modal-content .img-cont img {
      max-width: 100%; }
  .carousel-inner .button-cont {
    width: 300px; }
  .details-modal .modal-dialog .header-right {
    float: left;
    text-align: left; }
    .details-modal .modal-dialog .header-right h3 {
      margin-top: -11px; }
  .modal-dialog {
    width: 300px; }
  .programs .card-itself {
    height: 420px; }
  .programs .card-itself .bold-headr {
    display: inline-block;
    font-weight: 800;
    color: #c4b815;
    line-height: 33px;
    font-size: 20px; }
  .programs .card-itself .card-header {
    padding-top: 91px;
    padding-bottom: 16px; }
  .order-modal .modal-dialog {
    width: 320px; }
  .order-modal .modal-dialog .btn {
    width: 266px;
    display: block;
    margin: 0 auto;
    height: 60px;
    font-size: 22px;
    margin-top: 45px; }
  .layout-header.active .nav li a {
    font-size: 24px;
    padding: 15px 0; }
  .modal-dialog {
    position: absolute;
    right: 0;
    left: 0;
    top: 50%;
    margin: 20px auto 0;
    -webkit-transform: translate(0, -50%) !important;
            transform: translate(0, -50%) !important; }
  .details-modal .modal-btn .btn {
    width: 300px; }
  .care .care-descr-header h2 {
    font-size: 25px;
    margin-bottom: 10px; }
  .care .care-descr-header h1 {
    font-size: 36px;
    line-height: 37px; } }

@media (min-width: 1280px) {
  .layout-container {
    width: 1170px !important;
    min-width: 1170px !important;
    margin: 0 auto; } }

@media (min-width: 993px) and (max-width: 1280px) {
  .who-we .who-we-wrap .descr-wrap {
    padding: 0 30px 30px; }
  .care .care-descr {
    padding-right: 10px; }
  .care-descr button.btn {
    width: 300px; }
  .blog-text {
    padding-right: 10px; }
  .footer-item.phone {
    margin-left: -40px; }
  .footer-item.mail {
    margin-left: -80px; }
  .footer-item.addres {
    margin-left: 20px;
    margin-right: -40px; }
  .footer-btn {
    width: 300px;
    margin-left: -90px; }
  .img-cont {
    overflow: hidden; }
  .details-modal .modal-dialog {
    width: 90vw; }
  .head-section .carousel-indicators {
    right: 50px; }
  .head-section .carousel-control-wrap .counter {
    right: 75px; }
  .head-section .carousel-control.right, .head-section .carousel-control.left {
    right: 40px; }
  .layout-header .nav li a {
    margin-right: 10px; }
  .details-modal .modal-dialog {
    height: 323px;
    top: 50px;
    -webkit-transform: translateY(0) translateX(-50%) !important;
            transform: translateY(0) translateX(-50%) !important; } }

/* Barebones Compass layout styles
 *
 * Aside styles
 */
.layout-aside {
  display: inline-block;
  width: 300px;
  float: left;
  margin-right: 10px; }

/* Barebones Compass layout styles
 *
 * Content styles
 */
.layout-content {
  padding-top: 157px; }

.layout-aside + .layout-content {
  margin-left: 310px; }

/* Barebones Compass layout styles
 *
 * Footer styles
 */
.layout-footer {
  background-color: #424242;
  height: 137px; }
  .layout-footer .footer-item [class^="fr-"],
  .layout-footer .footer-item [class*=" fr-"] {
    display: inline-block;
    border: 1px solid #f7e754;
    padding: 0 5px;
    font-size: 25px;
    margin-right: 10px; }
  .layout-footer .footer-item [class^="fr-"]:before,
  .layout-footer .footer-item [class*=" fr-"]:before {
    color: #f7e754;
    vertical-align: middle; }
  .layout-footer .footer-item .item-head h3 {
    display: inline-block;
    color: #fff;
    text-transform: uppercase;
    font-size: 22px;
    font-weight: 700;
    margin-top: 20px;
    margin-bottom: 10px; }
  .layout-footer .footer-item .item-content p {
    margin-top: 0;
    color: #fff;
    margin-bottom: 0;
    line-height: 1.2; }
  .layout-footer .footer-item.phone .item-content p {
    margin: 5px 0; }
  .layout-footer .btn {
    margin-top: 40px; }

html,
body {
  height: 100%; }

.layout-content {
  clear: both;
  min-height: 100%;
  height: auto !important;
  height: 100%;
  margin-bottom: -137px; }

.layout-content:after {
  content: "";
  display: block;
  height: 137px; }

.layout-footer {
  clear: both;
  position: relative; }

/*# sourceMappingURL=data:application/json;base64, */
